name: Code Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov flake8 black isort safety bandit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Code formatting check with Black
      run: |
        black --check --diff .

    - name: Import sorting check with isort
      run: |
        isort --check-only --diff .

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Security check with bandit
      run: |
        bandit -r . -x .venv/,test_*

    - name: Dependency vulnerability check
      run: |
        safety check

    - name: Run comprehensive quality tests
      run: |
        python test_quality.py

    - name: Generate test coverage
      run: |
        pytest --cov=. --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Archive quality report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quality-report-${{ matrix.python-version }}
        path: |
          quality_report.json
          htmlcov/
          coverage.xml
